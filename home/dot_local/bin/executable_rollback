#!/usr/bin/env nu

$env.config.table.mode = "none"

def main [config?: string] {
  let cfg = if ($config == null) { "root" } else { $config }
  let full_table = (^snapper --jsonout -c $cfg list | from json | get $cfg)
  let list_res = ($full_table | select number type date)
  let snapshots = ($list_res | reverse | table -i false | lines)
  let preview_cmd = "nu -n -c \"" + "snapper --jsonout -c " + $cfg + " list | from json | get " + $cfg + " | where number == ({2} | into int) | transpose | rename Label Value | table -i false -t compact" + "\""

  let sel_res = echo $snapshots | ^fzf --header-lines=1 --prompt 'rollback: ' --preview $preview_cmd --preview-window 'down:35%:wrap' | complete 
  let selected = ($sel_res.stdout | split words | get 1)

  # Validate snapshot exists (using cached data) - match first field exactly
  let match = $full_table | where number == ($selected | into int)
  let num_matches = $match | length

  if ($num_matches == 0) {
    print $"❌ Snapshot ($selected) not found."
    exit 1
  }

  print ""
  print "🎯 Selected snapshot:"
  print $match
  print ""

  let reply = (input $"⚠️  Are you sure you want to rollback to snapshot ($selected)? This will reboot your system! [y/N]: ") | str downcase | str trim

  print ""
  if $reply not-in ["y", "yes"] {
    print "❌ Rollback cancelled."
    exit 0
  }

  print $"🔄 Rolling back to snapshot ($selected)..."

  # Perform rollback
  ^sudo snapper -c $cfg rollback $selected

  if ($env.LAST_EXIT_CODE == 0) {
    print "✅ Rollback completed successfully!"
    print "🔄 System will reboot in 5 seconds..."
    print "   Press Ctrl+C to cancel reboot"

    for i in (5..1) {
      print $"   Rebooting in ($i)..."
      sleep 1sec
    }

    print "🔄 Rebooting now..."
    ^sudo reboot
  } else {
    print "❌ Rollback failed!"
    exit 1
  }
}
